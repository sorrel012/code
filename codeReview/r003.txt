// 계산결과 변수에 담기
	-☆	num1 + num2 = result;
		System.out.println(result);
		
	-	System.out.println(num1 + num2);	


// if 조건식 쓸 때 조건에 적합한 연산자 사용해서 가독성 높이기
	-☆	if (score >= 90) {
		    System.out.printf("입력한 %d점은 성적 A입니다.", score);
		} else if (score >= 80) {
			System.out.printf("입력한 %d점은 성적 B입니다.", score);
		
	-	if (score > 89) {
		    System.out.printf("입력한 %d점은 성적 A입니다.", score);
		} else if (score > 79) {
			System.out.printf("입력한 %d점은 성적 B입니다.", score);

//switch case : 문자열 비교 가능~ 적절히 사용하기

//가독성 향상: if 한 칸씩 띄기
	-☆	if (score >= 90) {
		    System.out.printf("입력한 %d점은 성적 A입니다.", score);
		    
		} else{
			System.out.printf("입력한 %d점은 성적 F입니다.", score);
		}
		
	- if (score >= 90) {
		    System.out.printf("입력한 %d점은 성적 A입니다.", score);		    
		} else{
			System.out.printf("입력한 %d점은 성적 F입니다.", score);
		}

// 형식문자 %c -> (char) 생략 가능
	~	int alphabet = 90;
		System.out.printf("'%c'",alphabet);

// 제어문 중첩 줄일 수 있으면 최대한 줄여보기! > 가독성 향상
	-☆	if (year % 4 != 0) {
	    result = "평년";
	    } else if (year % 100 != 0) {
	        result = "윤년";
	    } else if (year % 400 == 0) {
	        result = "윤년";
	    } else {
	        result = "평년";
	    }
	
	-	if(year % 4 == 0) {
			if(year % 100 == 0) {
				if(year % 400 == 0) {
					result="윤년";
				} else {
					result="평년";
				}
			} else {
				result="윤년";
			}
		} else {
			result="평년";
		};

// scan.close() 
	- 외부 입출력하는 도구들은 단순하게 기능 이외에도 외부 장치와의 연동때문에 추가로 다른 자원을 사용하는 업무가 동반되는데 
		스캐너같은 경우는 입력장치다 보니 키보드 입력과 관련된 외부 자원을 사용한다.
		근데 하나의 스캐너가 그걸 사용하겠다고 가져간뒤에 반납을 안 하면 다른 스캐너가 그 자원을 사용 못하는 경우가 생기고
		Resource leak 가 뜬다. > 안정하게 사용하려면 사용이 끝나고 항상 close()해주는게 좋은 버릇!
	- 대신 스캐너를 여러개 동시에 사용할 때 그중 하나를 닫아버리면 다른 모든 스캐너도 동시에 닫히니까 조심해야 한다.