<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
        				
    <!-- Spring AOP -->
    
    <!-- 주업무 객체 -->
    <bean id="memo" class="com.test.aop1.MemoImpl"></bean>
    
    <!-- 보조업무 객체 -->        				
    <bean id="logger" class="com.test.aop1.Logger"></bean>
    
    <!-- 주업무 객체 + 보조업무 객체 -->
    <aop:config>
    	
    	<!-- 보조 업무를 담당할 객체를 지정: 역할 -->
    	<aop:aspect id="loggerAdvice" ref="logger">
    	
	    	<!-- 
	    		주 업무 객체를 지정 > 메소드 찾기 > PointCut 지정하기
	    		
	    		PointCut 	> 주업무 객체의 특정 메소드
	    					> Memo 객체의 메소드 중 하나(이상)   
	
				AspectJ 표현식 > PointCut 지정
				- execution() 지시자
				- execution([접근지정자] 반환형 [클래스].메소드(인자))				
					~ execution(public void com.test.aop1.MemoImpl.add(String))
				
				- '*' : 와일드카드(접근지정자, 반환형, 패키지, 클래스. 메소드)
				- '..' : 와일드카드(인자) > 0개 이상의 인자값
				
				- within() 지시자
	    	-->
	    	
	    	<aop:pointcut expression="execution(public void com.test.aop1.MemoImpl.add(String))" id="p1"/>
    	
    		<aop:pointcut expression="execution(public String com.test.aop1.MemoImpl.read(int))" id="p2"/>
    		
    		<aop:pointcut expression="execution(public void com.test.aop1.MemoImpl.add(String)) || execution(public String com.test.aop1.MemoImpl.read(int))" id="p3"/>
    		
    		<aop:pointcut expression="execution(void add(String))" id="p4"/>
    		
    		<aop:pointcut expression="execution(* com.test.aop1.MemoImpl.*(..))" id="p6"/>
    		
    		<!-- 이름의 일부에도 *를 사용할 수 있다. ex) a* > a로 시작하는 메소드 찾기  -->
    		<aop:pointcut expression="execution(* com.test.aop1.Memo*.a*(..))" id="p7"/>
    		
    		<aop:pointcut expression="within(com.test.aop1.MemoImpl)" id="p8"/>
    		
    		<aop:pointcut expression="execution(void add(String))" id="p9"/>
    	
    		<!--    			
    			주업무와 보조업무 = 결합 > 위빙(Weaving) > Advice 5가지 중 하나    		
    		-->
    		
    		<!-- 
    		<aop:after method="log" pointcut-ref="p1"/>
    		<aop:after method="log" pointcut-ref="p2"/>
    		<aop:after method="log" pointcut-ref="p3"/>
    		<aop:after method="log" pointcut-ref="p4"/>
    		<aop:after method="log" pointcut-ref="p6"/>
    		<aop:after method="log" pointcut-ref="p7"/>
    		<aop:after method="log" pointcut-ref="p8"/>
    		-->
    		
    		<!-- 
	    	<aop:before method="log" pointcut-ref="p9"/>
	    	 -->
	    	 
	    	<!-- <aop:around method="time" pointcut-ref="p9"/> -->
	    	
	    	<!-- <aop:after-returning method="history" pointcut-ref="p2" returning="memo"/> -->
	    	
	    	<aop:after-throwing method="check" pointcut-ref="p2" throwing="e"/>
    	
    	</aop:aspect>
    	
    </aop:config>
        				
</beans>