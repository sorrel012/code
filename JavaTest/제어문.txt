//프로그램
	- 수많은 문장의 집합
	- 명령어들이 미리 정해진 제어의 흐름에 따라 실행(위 -> 아래)
	
//제어문
	- 그 흐름을 통제하는 명령어
	- 조건 제어, 반복 제어, 분기 제어
	- 알고리즘
	
		1. 조건문
			- 개발자가 조건을 제시한 후 프로그램 흐름을 제어한다.
			- 조건식 > boolean 값을 가진다.
			
			- 자바 외의 다른 언어 조건
				~ 정수: 0 > false), 0이 아닌 모든 숫자 > true
				~ 실수: 0.0 > false, 0이 아닌 모든 숫자 > true
				~ 문자: \0(null 문자, 문자코드값(0)) > false, 그 외의 모든 문자 > true
				~ 문자열: "0" > false, 그 외의 모든 문자열 > true
				
			a. if
				- 조건으로 사용 가능한 자료형
					~ boolean
			b. switch
				- 조건으로 사용 가능한 자료형
					~ 정수
					~ 문자
					~ 문자열
			
		2. 반복문
			- 특정 코드를 개발자가 원하는 만큼 반복 실행한다.
			
			a. for ~ for (int i = 1; i <=3; i++) {}
				- i : 루프 변수★
				- 무한루프 : 회전수를 미리 예측하기 힘든 경우에 사용
					~ for (;;) {} 
						> 원래는 for (; true;) 인데 조건식을 생략하면 자동으로 true가 대입됨.
						> 초기식, 증감식은 영향을 미치지 않음.
									
								
				1. 초기식 실행
						~ int i = 1;
						
				2. 조건식 실행
					2-1. true: 실행블럭을 실행한다.
					2-2. false
						~ i <= 3; 
				3. 실행문
						~ System,out.println("Hello")
						
				4. 증감식 실행
						~ i++;
				
				5. 조건을 만족할 때까지 2~4 반복
				
						
			b. while
			
			c. do while
		
		3. 분기문
			- 개발자가 코드의 흐름을 원하는 곳으로 이동한다.
			a. break
			b. continue
			c. goto(JDK 1.5 폐기)

