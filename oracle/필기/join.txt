
-- 관계형 데이터베이스 시스템(RDBMS, Oracle)이 지양하는 것
    1. 테이블에 기본키가 없는 상태 > 데이터 조작 곤란
    2. null이 많은 상태의 테이블 > 데이터 조작 곤란 + 공간 낭비
    3. 데이터가 중복되는 상태 > 데이터 조작 곤란 + 공간 낭비
    4. 하나의 속성값이 원자값이 아닌 상태
    
    
-- join
    - (서로 관계를 맺은) 2개(1개) 이상의 테이블을 사용해서 1개의 결과셋을 만드는 연산
    - 테이블A + 테이블B = 테이블C
    - join에서 핵심은 자식 테이블! 자식 테이블만으로는 원하는 결과를 얻을 수 없어서 부모 테이블과 조인함.
    
    1. 단순 조인, Cross Join
        - 카티션곱, 데카르트곱
        - A 테이블 레코드 개수 X B 테이블 레코드 개수 = 결과셋 레코드 개수
        - A 테이블 컬럼 개수 + B 테이블 컬럼 개수 = 결과셋 컬럼 개수
        - 쓸모가 없다. > 가치 있는 행과 가치 없는 행이 섞여 있음.
        - 개발용, 테스트용으로 사용 > 유효성과 상관 없이 다량의 데이터를 만들 때
        
        ~ select 컬럼리스트 from 테이블A cross join 테이블B   > ANSI-SQL(표준 SQL) > 권장
        ~ select 컬럼리스트 from 테이블A, 테이블B             > Oracle 전용
        - 왼쪽 테이블의 첫 번째 레코드 + 오른쪽 테이블의 첫 번째 레코드 > 첫 번째 레코드
                                            ....
          왼쪽 테이블의 첫 번째 레코드 + 오른쪽 테이블의 n 번째 레코드 > n 번째 레코드
                                            ....
          왼쪽 테이블의 n 번째 레코드 + 오른쪽 테이블의 n 번째 레코드 > (왼쪽 테이블 레코드 수 X 오른쪽 테이블 레코드 수) 번째 레코드
            
    2. 내부 조인, Inner Join
        - 단순 조인에서 유효한 레코드만 추출하는 조인
        - 부모 자식 관계의 테이블이 아니어도 동작한다. (다만 결과가 의미 없을 확률이 높다.)
        
        ~ select 컬럼리스트 from 테이블A inner join 테이블B on 테이블A.컬럼 = 테이블B.컬럼;     > ANSI-SQL(표준 SQL) > 권장
          select
            컬럼리스트
          from 테이블A 
            inner join 테이블B 
                on 테이블A.컬럼 = 테이블B.컬럼; (on 부모테이블A.PK = 자식테이블B.FK > 99%★)
        
        ~ select 컬럼리스트 from 테이블A, 테이블B where 테이블A.컬럼 = 테이블B.컬럼;            > Oracle 전용
        
    3. 외부 조인, Outer Join
        - 내부 조인 결과 + 결과셋에 포함되지 못한 부모 테이블의 나머지 레코드
        - 보통 outer join은 부모 테이블을 가리킨다.(보편적으로 자식 테이블은 inner join에 다 포함되기 때문)
        ~ select 
            컬럼리스트
          from 테이블A
            (left|right)outer join 테이블 B
                on 테이블A.컬럼 = 테이블B.컬럼;
                
    4. 셀프 조인, Self Join
        - 1개의 테이블을 사용하는 조인		
        - 테이블이 스스로 자신과 관계를 맺는 경우
        
    5. 전체 외부 조인, Full Outer Join
        - 서로 참조하고 있는 관계에서 사용
        
              
