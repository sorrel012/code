//파일·디렉토리 조작
	- 윈도우 탐색기로 하는 행동을 자바로 구현
	- 파일, 폴더 > 정보 확인, 새로 만들기. 이름 바꾸기, 이동하기, 삭제하기 등..
	- 디렉토리(폴더)는 파일의 일종이다. > 폴더 자체는 사이즈x
	
	1. 외부 파일을 참조하는 객체 생성
	2. 참조 객체 조작 > 외부 파일에 적용
	
	
//파일 입출력
	- 텍스트 입출력
		~ 메모장
		~ 응용 프로그램 <-> (데이터)
		
		- 파일 쓰기(출력)		
			① stream		
				- 바이트 단위 쓰기(1byte씩 저장) > 한글은 추가 작업 필요
			
				1. 데이터를 저장할 파일 참조
				2. 저장할 파일의 스트림 객체 생성(스트림 열기)
				3. 쓰기 > 문자코드값
				4. 스트림 닫기
				
				a. 덮어쓰기 모드(기본) 
					- 기존 내용을 삭제하고 다시 파일을 생성 후 데이터를 작성한다.
					- 파일 있으면 > 파일을 다시 생성
					- 파일 없으면 > 파일을 새로 생성
			
				b. 이어쓰기 모드
					- 기존 내용을 유지하고, 이어서 데이터를 추가한다.
					- 스트림을 열 때 매개변수에 true를 추가로 적어준다.
					- 파일 있으면 > 파일을 그대로 사용
					- 파일 없으면 > 파일을 새로 생성
					
			② Files
					
	- 비텍스트 입출력
		~ 그림판
		~ 동영상 플레이어
		~ 음악 플레이어

//저장 장치
	- 데이터 1,0으로 저장
	- 데이터 자료형 존재(x) > 모든 것을 문자열로 저장 > 문자 코드로 저장하긴 하지만 프로그래밍 언어와 호환되는 패턴 x

//인코딩, Encoding
	- 문자 코드(응용 프로그램 데이터)를 부호화(1,0) 시키는 작업
	- 자바 프로그램("홍길동") > 텍스트 파일(100100100010)	
	
//디코딩, Decoding
	- 부호 데이터를 문자 코드로 변환하는 작업(복호화)
	- 텍스트 파일(100100100010) > 자바 프로그램("홍길동")
	
// 인코딩/디코딩 규칙
	1. ANSI
	4. ISO-8859-1
	5. EUC-KR
	6. MS949
	-----------
	2. UTF-8
	-----------
	3. UTF-16	
	
	1. ANSI, 4, 5, 6
		- 영어(서유럽 문자, 숫자, 특수문자, 제어문자 등) : 1byte
		- 한글(일본어, 한자 등) : 2byte
		
	2. UTF-8(거의 국제 표준)
		- 영어 : 1byte
		- 한글 : 3byte
	
	3. UTF-16
		- 영어 : 2byte
		- 한글 : 2byte
		