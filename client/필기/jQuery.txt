
// 순수 JavaScript
    - Vanila JavaScript


// JavaScript Library(API)
    - jQuery


// JavaScript Framework
    - React
    - Angular
    - Vue


// jQuery 
    - https://jquery.com/
    - Lightweight Footprint
    - CSS Compliant > CSS 선택자 지원 : ES6
    - Cross-Brower

    - 설치
        1. 직접 설치 > 파일 다운로드 + 참조
        2. Node.js > NPM > 설치
        3. CND 사용 > URL 참조    
    
    - 대부분의 기능이 함수로 제공된다.(프로퍼티 X)★
    - 간편하게 Alias인 '$'를 'jQuery' 대신 사용한다.
    

// jQuery 함수
    - jQuery 함수 반환값 > jQuery 객체
        (거의 대부분의 jQuery 함수는 자기 자신을 반환한다.)

    - jQuery 함수 형태 > getter, setter를 하나로 구현
        1. 전용 함수
            - 가독성이 좋고 편리하다.

            a. obj.test()       : getter > 읽기
            b. obj.test(param)  : setter > 쓰기

        2. 범용 함수
            - 구문이 길다.

            a. obj.test(param)          : getter > 읽기
            b. obj.test(param, param)   : setter > 쓰기

    - 기능
        1. 태그 검색
        2. 형변환(JavaScript 객체 -> jQuery 객체)


// jQuery Effection function
    
    1. hide([time]), show([time]), toggle([time])
    2. fadeOut([time]), fadeIn([time]), fadeToggle([time])
    3. slideUp([time]), sildeDown([time]), slideToggle([time])
    4. animate() > 사용자 정의


// CSS, HTML 조작
    - css('속성')       > getter
    - css('속성', 값)   > setter

    ~ $().addClass : class 선택자 추가
    ~ $().removeClass : class 선택자 제거

    - 너비/높이
        ~ width / height : 수치(px)
        ~ innerWidth / innerHeight : width / height + padding
        ~ outerWidth / outerHeight : width/height + padding + border 
        ~ outerWidth(true) / outerHeight(true) : width/height + padding + border + margin


// HTML 조작
    1. 콘텐츠 조작
        ~ innerText, textContent > text()
        ~ innerHTML > html()
        ~ value > val()

    2. 속성 조작
        - HTML 속성을 조작하는 메소드
            ~ obj.attr('name')
            ~ obj.attr('name', value)

        - JavaScript 프로퍼티를 조작하는 메소드(HTML 속성에는 없고, JavaScript에만 있는 프로퍼티)
            ~ obj.prop('name')
            ~ obj.prop('name', value)

    3. 태그 생성
        ~ 부모.append(자식)
        ~ 부모.prepend(자식)

        ~ 자식.appendTo(부모)
        ~ 자식.prependTo(부모)

    4. Axis
        - 자식 탐색
            ~ children()
            ~ children().first()
            ~ children().last()
            ~ children().eq() : children[]
            ~ 상위태그.find('CSS 선택자') : 특정 태그를 기점으로 하위 태그를 검색 > 지역 검색
        
        - 조상 탐색
            ~ parent()
            ~ parents()
            ~ parentsUntil(태그)☆: 특정 부모 태그 전까지 탐색
        
        - 형제 탐색
            ~ prev()
            ~ next()
            ~ prevAll()
            ~ nextAll()
            ~ preveUntil(조건)
            ~ siblings()

