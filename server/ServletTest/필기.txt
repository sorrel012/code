
// 지금까지 정리
    - HTML, CSS, JavaScript > 정적 HTML 페이지
    - 자바 > 위의 페이지 생산 > 동적 HTML 페이지

// Servlet, 서블릿
    - 웹서버 측에서 자바를 사용한 프로그램을 동작시키는 기술(환경)
    - 목적: 클라이언트 요청에 따라 동적으로 웹페이지 생성
    
    
// Servlet Class, 서블릿 클래스
    - 자바 클래스
    - 서블릿(역할 부여)
    
    - 작성 규칙
        1. 서블릿 클래스 선언
            a.  javax.servlet.Servlet 인터페이스를 구현한다.  > 복잡함
                javax.servlet.http.HttpServlet 클래스를 상속 받는다.(위의 인터페이스를 상속받은 클래스) > 간편함 > 주로 사용★★★
                
        2. doGet/doPost 메소드 선언
            - 둘 중 하나 선언 or 둘다 선언
            - 클라이언트(브라우저)의 요청이 들어오면 자동으로 호출되는 메소드
            - 동적으로 HTML 페이지를 만드는 역할
            
            1) doGet - <form method="GET">
            2) doPost - <form method="POST">
            
            - 메소드 작성 규칙
                a. 매개 변수 작성(2개)
                    1. java.servlet.http.HttpServletRequest
                    2. java.servlet.http.HttpServletResponse
                b. 예외 미루기
                    1. java.io.IOException //페이지 동적 생성 - 외부 입출력
                    2. java.servlet.ServletException //서블릿 작업
                    
        3. 동적 HTML 문서 작성
            - HttpServletResponse 객체의 getWriter() 메소드 호출 > PrintWriter 객체 반환
            - PrintWriter 객체의 printXXX("<html>") 메소드를 사용 > HTML을 생성
                ※ BufferedWriter > 생성된 파일을 하드디스크에 저장
                   PrintWriter > 생성된 파일을 톰팻을 통해 브라우저에게 반환
            - 페이지 완성 > 브라우저에게 반환
            
        4. 브라우저가 자바 파일(서블릿)을 호출할 수 있는 가상 주소 매핑
            - web.xml
            
            
// 자바 파일 웹 호출
    - 자바 파일(class)은 웹(http://)에서 호출이 불가능하다.
    - 자바 파일을 브라우저를 통해 웹에서 호출할 수 있는 방법이 필요하다.
        > 가상 주소 생성 > 대신 자바 파일을 호출하게 설정!!        
            web.xml == Deployment Descriptor == 배포 서술자
                - 아파치 톰캣이 웹 사이트 운영에 필요한 여러 가지를 설정하는 파일
                
                
// 데이터 전송&수신
    1. 전송: Ex04.java
    2. 수신: Ex04Ok.java   
    
    
// POST 요청
    1. <form method="POST">
    2. XMLHttpRequest(Ajax)
  
  
// GET 요청
    1. <form method="GET">
    2. XMLHttpRequest(Ajax)  
    3. <a href="">
    4. location.href
    5. F5(새로고침)
    6. URL 직접 입력


----------------------------------------------------------------------------------------------------
    
    
    
    
    